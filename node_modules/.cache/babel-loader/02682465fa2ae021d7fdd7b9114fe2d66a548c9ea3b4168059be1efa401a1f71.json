{"ast":null,"code":"var _jsxFileName = \"/Users/younwoo/Desktop/todolist-master/src/components/CreateTodo.tsx\",\n  _s = $RefreshSig$();\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { useForm } from \"react-hook-form\";\nimport { categoryState, todoState } from \"./atom\";\nimport Category from \"./Category\";\nimport styled from \"styled-components\";\nimport { BiAddToQueue } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  box-shadow: rgb(10 10 10 / 10%) 0px 0.2rem 0.5rem;\n  border-radius: 0.7rem;\n  align-items: center;\n  justify-content: center;\n  span {\n    color: red;\n    font-size: 0.7rem;\n  }\n`;\n_c = Container;\nconst CategoryWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  form {\n    button {\n      border: 2px solid ${props => props.theme.bgColor};\n      border-radius: 7px;\n      &:hover {\n        color: ${props => props.theme.accentColor};\n        border: 2px solid ${props => props.theme.accentColor};\n        border-radius: 7px;\n      }\n    }\n  }\n`;\n_c2 = CategoryWrapper;\nconst CreateTodo = () => {\n  _s();\n  const setTodos = useSetRecoilState(todoState);\n  const category = useRecoilValue(categoryState);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const handleValid = _ref => {\n    let {\n      todo\n    } = _ref;\n    setTodos(todos => [...todos, {\n      text: todo,\n      id: Date.now(),\n      category\n    }]);\n    setValue(\"todo\", \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(CategoryWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(handleValid),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...register(\"todo\", {\n              required: \"해야할 일은 필수적으로 입력해야합니다.\"\n            }),\n            placeholder: \"\\uD574\\uC57C\\uD560 \\uC77C\\uC744 \\uC801\\uC5B4\\uBCF4\\uC544\\uC694!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(BiAddToQueue, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), errors.todo && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.todo.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CreateTodo, \"AgKrMOWwY8gJQwMORlwHOROpd0g=\", false, function () {\n  return [useSetRecoilState, useRecoilValue, useForm];\n});\n_c3 = CreateTodo;\nexport default CreateTodo;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CategoryWrapper\");\n$RefreshReg$(_c3, \"CreateTodo\");","map":{"version":3,"names":["useRecoilValue","useSetRecoilState","useForm","categoryState","todoState","Category","styled","BiAddToQueue","Container","div","CategoryWrapper","props","theme","bgColor","accentColor","CreateTodo","setTodos","category","register","handleSubmit","setValue","formState","errors","handleValid","todo","todos","text","id","Date","now","required","message"],"sources":["/Users/younwoo/Desktop/todolist-master/src/components/CreateTodo.tsx"],"sourcesContent":["import { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { useForm } from \"react-hook-form\";\nimport { categoryState, todoState } from \"./atom\";\nimport Category from \"./Category\";\nimport styled from \"styled-components\";\nimport { BiAddToQueue } from \"react-icons/bi\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  box-shadow: rgb(10 10 10 / 10%) 0px 0.2rem 0.5rem;\n  border-radius: 0.7rem;\n  align-items: center;\n  justify-content: center;\n  span {\n    color: red;\n    font-size: 0.7rem;\n  }\n`;\n\nconst CategoryWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  form {\n    button {\n      border: 2px solid ${(props) => props.theme.bgColor};\n      border-radius: 7px;\n      &:hover {\n        color: ${(props) => props.theme.accentColor};\n        border: 2px solid ${(props) => props.theme.accentColor};\n        border-radius: 7px;\n      }\n    }\n  }\n`;\n\ninterface IFormData {\n  todo: string;\n}\n\nconst CreateTodo = () => {\n  const setTodos = useSetRecoilState(todoState);\n  const category = useRecoilValue(categoryState);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm<IFormData>();\n\n  const handleValid = ({ todo }: IFormData) => {\n    setTodos((todos) => [...todos, { text: todo, id: Date.now(), category }]);\n    setValue(\"todo\", \"\");\n  };\n\n  return (\n    <>\n      <Container>\n        <CategoryWrapper>\n          <Category />\n          <form onSubmit={handleSubmit(handleValid)}>\n            <input\n              {...register(\"todo\", {\n                required: \"해야할 일은 필수적으로 입력해야합니다.\",\n              })}\n              placeholder=\"해야할 일을 적어보아요!\"\n            />\n            <button>\n              <BiAddToQueue />\n            </button>\n          </form>\n        </CategoryWrapper>\n        {errors.todo && <span>{errors.todo.message}</span>}\n      </Container>\n    </>\n  );\n};\n\nexport default CreateTodo;\n"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,iBAAiB,QAAQ,QAAQ;AAC1D,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AACjD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,YAAY,QAAQ,gBAAgB;AAAC;AAAA;AAE9C,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KAdID,SAAS;AAgBf,MAAME,eAAe,GAAGJ,MAAM,CAACG,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA,0BAA2BE,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,OAAQ;AACzD;AACA;AACA,iBAAkBF,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACE,WAAY;AACpD,4BAA6BH,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACE,WAAY;AAC/D;AACA;AACA;AACA;AACA,CAAC;AAAC,MAfIJ,eAAe;AAqBrB,MAAMK,UAAU,GAAG,MAAM;EAAA;EACvB,MAAMC,QAAQ,GAAGf,iBAAiB,CAACG,SAAS,CAAC;EAC7C,MAAMa,QAAQ,GAAGjB,cAAc,CAACG,aAAa,CAAC;EAC9C,MAAM;IACJe,QAAQ;IACRC,YAAY;IACZC,QAAQ;IACRC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGpB,OAAO,EAAa;EAExB,MAAMqB,WAAW,GAAG,QAAyB;IAAA,IAAxB;MAAEC;IAAgB,CAAC;IACtCR,QAAQ,CAAES,KAAK,IAAK,CAAC,GAAGA,KAAK,EAAE;MAAEC,IAAI,EAAEF,IAAI;MAAEG,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;MAAEZ;IAAS,CAAC,CAAC,CAAC;IACzEG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC;EACtB,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,SAAS;MAAA,wBACR,QAAC,eAAe;QAAA,wBACd,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG,eACZ;UAAM,QAAQ,EAAED,YAAY,CAACI,WAAW,CAAE;UAAA,wBACxC;YAAA,GACML,QAAQ,CAAC,MAAM,EAAE;cACnBY,QAAQ,EAAE;YACZ,CAAC,CAAC;YACF,WAAW,EAAC;UAAe;YAAA;YAAA;YAAA;UAAA,QAC3B,eACF;YAAA,uBACE,QAAC,YAAY;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QACT;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA,QACS,EACjBR,MAAM,CAACE,IAAI,iBAAI;QAAA,UAAOF,MAAM,CAACE,IAAI,CAACO;MAAO;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA;EACxC,iBACX;AAEP,CAAC;AAAC,GApCIhB,UAAU;EAAA,QACGd,iBAAiB,EACjBD,cAAc,EAM3BE,OAAO;AAAA;AAAA,MARPa,UAAU;AAsChB,eAAeA,UAAU;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}